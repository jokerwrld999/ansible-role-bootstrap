---
- name: System Setup | Repos | Install package management tools
  ansible.builtin.package:
    name:
      - curl
      - gnupg2
      - software-properties-common
      - wget
    state: latest
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: System Setup | Repos | Add ignored packages Arch
  ansible.builtin.lineinfile:
    dest: /etc/pacman.conf
    regexp: "^#?IgnorePkg"
    line: "IgnorePkg   = ansible linux linux-headers linux-lts linux-lts-headers"
  when: ansible_distribution == "Archlinux"

- name: System Setup | Repos | Stat Debian sources list
  ansible.builtin.stat:
    path: "/etc/apt/sources.list"
  register: debian_sources_file
  when: ansible_distribution == "Debian"

- name: System Setup | Repos | Ensure Debian sources updated
  ansible.builtin.lineinfile:
    path: "/etc/apt/sources.list"
    regexp: "^# Modified by"
    state: absent
  check_mode: yes
  changed_when: false
  register: debian_sources
  when: ansible_distribution == "Debian" and debian_sources_file.stat.exists == true

- name: System Setup | Repos | Add Debian sources
  ansible.builtin.copy:
    src: distribution_packages/debian_sources.list
    dest: /etc/apt/sources.list
  when:
    - ansible_distribution == "Debian"
    - debian_sources_file.stat.exists == false or not debian_sources.found

- name: System Setup | Repos | Add GitHub CLI sources
  ansible.builtin.shell: |
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
    chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | \
    tee /etc/apt/sources.list.d/github-cli.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/github-cli.list
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: System Setup | Repos | Import Terraform Ubuntu/Debian
  ansible.builtin.shell: |
    wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
    tee /etc/apt/sources.list.d/hashicorp.list
  args:
    creates: /etc/apt/sources.list.d/hashicorp.list
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: System Setup | Repos | Stat Hashicorp repos
  ansible.builtin.stat:
    path: "/etc/yum.repos.d/hashicorp.repo"
  register: additional_repos
  when: ansible_distribution in ["Fedora", "Rocky"]

- name: System Setup | Repos | Import Terraform Fedora
  ansible.builtin.shell: |
    dnf install -y dnf-plugins-core
    dnf config-manager --add-repo https://rpm.releases.hashicorp.com/fedora/hashicorp.repo
  when: ansible_distribution == "Fedora" and additional_repos.stat.exists == false

- name: System Setup | Repos | Stat RPM Fusion repos
  ansible.builtin.stat:
    path: "/etc/yum.repos.d/rpmfusion-free-updates.repo"
  register: rpmfusion_repos
  when: ansible_distribution in ["Fedora", "Rocky"]

- name: System Setup | Repos | Install RPM Fusion Fedora
  ansible.builtin.shell: |
    dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    dnf install -y https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
  when: ansible_distribution == "Fedora" and rpmfusion_repos.stat.exists == false

- name: System Setup | Repos | Install RPM Fusion Rocky
  ansible.builtin.shell: |
    dnf install -y yum-utils
    dnf install -y epel-release
    dnf install -y rpmfusion-free-release
    dnf update -y
  when: ansible_distribution == "Rocky" and rpmfusion_repos.stat.exists == false

- name: System Setup | Repos | Install Additional repos Rocky
  ansible.builtin.shell: |
    dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
    dnf config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
    dnf update -y
    dnf makecache
  when: ansible_distribution == "Rocky" and additional_repos.stat.exists == false

- name: System Setup | Update package cache (arch, manjaro)
  community.general.pacman:
    update_cache: yes
    upgrade: yes
  changed_when: false
  when: ansible_distribution == "Archlinux"

- name: System Setup | Update package cache (debian, etc)
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
    name: "*"
    state: latest
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: System Setup | Update package cache (fedora/rocky)
  ansible.builtin.dnf:
    update_only: yes
    name: "*"
    state: latest
  changed_when: false
  when: ansible_distribution in ["Fedora", "Rocky"]
